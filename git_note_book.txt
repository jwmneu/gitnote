git init		创建git仓库(repository)
------------------------------------------------------------
git add			把文件添加到仓库（可以反复多次使用，
			添加多个文件）
------------------------------------------------------------
git commit		提交 （-m "" 追加提交说明）
------------------------------------------------------------
git status		显示当前工作区的状态 如果git status显
			示有文件被修改，可以通过git diff 查看
			修改内容。
------------------------------------------------------------
git log			显示从近到远的提交日志，可以配合
			--pretty=oneline 使得显示更规整
------------------------------------------------------------

git reset		允许我们在各个版本之间进行穿越
			--hard commit_id 穿越回到commit_id 对
			应的版本
------------------------------------------------------------
git reflog		查看命令历史，可以用来回到未来的某个
			版本
------------------------------------------------------------
git log			显示从近到远的提交日志，可以配合
			--pretty=oneline 使得显示更规整
------------------------------------------------------------

git reset		允许我们在各个版本之间进行穿越
			--hard commit_id 穿越回到commit_id 对
			应的版本
------------------------------------------------------------
git reflog		查看命令历史，可以用来回到未来的某个
			版本
------------------------------------------------------------
工作区(Working directory) 电脑上能看到的目录
版本库(Repository)	工作区有一个隐藏的目录.git 这是git的
			版本库。git版本库里面存了很多东西，
			其中最重要的就是称为stage(index)的暂
			存区，还有Git为我们自动创建的第一个分
			支master 以及指向master的指针HEAD
前面讲我们把文件往Git版本库添加的时候是分两步执行的：
第一步是用git add 把文件添加进去，实际上就是把文件添加到暂存区
第二步是用git commit 提交更改，实际上是把暂存区的所有内容提交
到当前分支。

可以简单地理解为，需要提交的文件修改统统放在暂存区，然后一次性
提交暂存区的所有修改。
------------------------------------------------------------
git 跟踪的是修改而不是文件本身，每一次修改如果不add到暂存区，
那么就不会加入到commit中
------------------------------------------------------------
git checkout -- file	可以丢弃工作区的修改，注意这里撤销的
			是工作区的修改，就是让文件恢复到最后
			一次commit 或add的状态
			git checkout 其实是用版本库里的版本
			替换工作区的版本，无论工作区是修改
			还是删除，都可以一键还原
------------------------------------------------------------
git reset HEAD file	可以把暂存区的修改撤销掉(unstage),重
			新放回工作区。git reset 既可以回退版
			本，也可以把暂存区的修改回退到工作区
------------------------------------------------------------
场景一：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修
改时，用命令 git checkout -- file
场景二：当你不但改乱了工作区某个文件的内容，还添加到了暂存区
时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就
回到了场景一。
场景三：已经提交了不合适的修改到版本库时，想要撤销本次提交，
就需要版本回退操作。
------------------------------------------------------------
git rm			用于删除一个文件
------------------------------------------------------------
把本地库与远程的库相关联：
git remote add origin git@github.com:jwmneu/gitnote.git

添加后 远程库的名字就是origin，这是Git默认的叫法
然后可以把本地库的所有内容推送到远程库上：
git push -u origin master

由于远程库是空的，我们第一次推送master分支时，加上-u参数，git
不仅会把本地master分支内的内容推送到远程分支，还会把本地的
master分支和远程的master分支关联起来，在以后推送的或者拉取的
时候就可以简化命令

git push		把本地库的内容推送到远程
------------------------------------------------------------

